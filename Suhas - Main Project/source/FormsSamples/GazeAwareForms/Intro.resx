<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="behaviorMap.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>